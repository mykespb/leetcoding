lc-2sum.py
https://leetcode.com/problems/two-sum/
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.

lc-afterpalin.py
Является ли строка палиндромом 
https://leetcode.com/problems/valid-palindrome/
Сложность: Лёгкая
Условие: палиндромом является фраза, которая после перевода в нижний регистр всех символов, а также удаления всех знаков препинания, читается одинаково как слева направо, так и справа налево. 
Задача - вернуть true, если строка палиндром, false - в противном слцелочислучае. 

lc-alien.py
Чужой язык
https://leetcode.com/problems/verifying-an-alien-dictionary/
Сложность: Лёгкая
Условие задачи: на чужом языке они также используют английские строчные буквы, но, возможно, в другом порядке. Порядок алфавита - это некоторая перестановка строчных букв.
Учитывая последовательность слов, написанных на чужом языке, и порядок алфавита, верните значение true тогда и только тогда, когда данные слова отсортированы лексикографически на этом чужом языке.
(1ая версия)

lc-alilingvo.py
Чужой язык
https://leetcode.com/problems/verifying-an-alien-dictionary/
Сложность: Лёгкая
Условие задачи: на чужом языке они также используют английские строчные буквы, но, возможно, в другом порядке. Порядок алфавита - это некоторая перестановка строчных букв.
Учитывая последовательность слов, написанных на чужом языке, и порядок алфавита, верните значение true тогда и только тогда, когда данные слова отсортированы лексикографически на этом чужом языке.
(2ая версия)

lc-allana.py
Нахождение всех анаграмм в строке
https://leetcode.com/problems/find-all-anagrams-in-a-string/
Сложность: Средняя
Условие задачи: даны две строки s и p, надо вернуть все индексы стартовых позиций, с которых начинаются анаграммы внутри строки s. 
Анаграмма - строка, составленная путём перестановок букв из какого либо базового набора. 

lc-anklaves.py
Количество анклавов
(https://leetcode.com/problems/number-of-enclaves/)
Сложность: Средняя
Условие задачи: дана двумерная решетка, где 0 - море, 1 - суша. 
Движения могут осуществляться в одном из четрыех направлений: вверх, вниз, вправо, влево. 
Необходимо посчитать количество анклавов. Анклавом является участок суши, который не прилегает ни к одной из границ заданной площадки. 

lc-arrsign.py
Знак произведения массива
(https://leetcode.com/problems/sign-of-the-product-of-an-array/)
Сложность задачи: Легкая
Условие задачи:
Существует функция signFunc(x), которая возвращает:
1, если x положительно
-1, если x отрицательно
0, если x равно 0.
Вам дается целочисленный массив nums. Пусть product - это произведение всех значений в массиве nums. Верните signFunc(product).

lc-aster.py
Столкновение астероидов
(https://leetcode.com/problems/asteroid-collision/)
Сложность: Средняя
Условие задачи: дан массив астероидов (каждое значение - вес астероида, а знак - направление движения). Каждый из астероидов двигается с одинаковой скоростью. 
При столкновени двух астероидов, асторид с меньшим весов уничтожается (у целого астероида вес остается неизменным после столкновения). 
Вывести надо результирующий массив после всевозможных столкновений.  

lc-biggtri.py
Треугольник наибольшей площади
(https://leetcode.com/problems/largest-triangle-area/)
Сложность: Лёгкая 
Условие задачи: дается массив точек на плоскости X-Y, где точки [i] = [xi, yi], верните площадь самого большого треугольника, который может быть образован любыми тремя различными точками. Будут приняты ответы в пределах 10-5 от фактического ответа.

lc-bintreeright.py
Бинарное дерево с правой стороны
https://leetcode.com/problems/binary-tree-right-side-view/
Сложность:  Средняя 
Условие задачи: на вход подается бинарное дерево, представим, что стоим справа, необходимо вывести значения, которые будут видны с этой стороны.

lc-bulls-cows.py
Быки и коровы 
(https://leetcode.com/problems/bulls-and-cows/)
Сложность: Средняя
Условие задачи: разыгрывается партия, в которой мы просим оппонента угадать число. После первой попытки мы мы говорим другу количество отданных цифр и неотгаданных. 
Быки - правильные цифры, находящиеся на нужных позициях. 
Коровы - правильные числа, но находящиеся на соответствующих позициях.
Задача - выдать подсказку в формате "xAyB", где x - количество быков, y - количество коров. 

lc-carsnake.py
Змейка из машин
(https://leetcode.com/problems/car-fleet/)
Сложность: Средняя  
Условие задачи: есть n машин, направляющихся в одно и то же место на расстоянии target  по однополосной дороге.
Дается два целочисленных массива длины n, в первом хранится положение, а во втором скорость соответствующей машины.
Машины не могут обгонять друг друга, и в случае если быстрая машина догнала медленную, то движение она у же продолжает со скоростью медленной машины.
Змейка из машин - группа нескольких или одной машины, достигающих одновременно целевого пункта (расстояние между машинами в одной змейке не учитывается).
Необходимо вычислить количество таких змеек. 

lc-colexcel.py
Столбцы таблицы Excel 
(https://leetcode.com/problems/excel-sheet-column-title/)
Сложность: Лёгкая 
Условие задачи: на вход подается номер столбца, необходимо конвертировать его в буквенное представление, которое будет использоваться в таблице Excel.

lc-combieq.py
Комбинации
(https://leetcode.com/problems/combinations/)
Сложность: Средняя
Условие задачи: даны два целых положительных числа n и k. Надо вывести все комибинации, состоящие из k-чисел в диапазоне [1, n]. 

lc-combsums.py
Комбинация сумм II
(https://leetcode.com/problems/combination-sum-ii/)
Сложность: Средняя 
Условие задачи: на вход дается список возможных кандидатов и целевое значение суммы, необходимо вывести все комбинации, которыми можно получить целевое значение. 
Каждое число из списка кандидатов должно содержаться в конечном подсписке из ответов ровно один раз.
Результирующий ответ не должен содержать в себе дубликатов. 

lc-confhalls.py
Конференц-залы II (https://leetcode.com/problems/meeting-rooms-ii/)
Сложность задачи: Средняя
Условие задачи:
Дан массив интервалов времени проведения совещаний, intervals, где intervals[i] = [start(i), end(i)]. Найдите минимальное требуемое количество конференц-залов.

lc-countingstr.py
Считалка
(https://leetcode.com/problems/count-and-say/)
Сложность: Средняя 
Условие задачи: последовательность "Посчитай и скажи" - это последовательность строк цифр, определяемая рекурсивной формулой:
посчитайте и скажите(1) = "1"
countAndSay(n) - это способ, которым вы бы "сказали" строку цифр из countAndSay(n-1), которая затем преобразуется в другую строку цифр.
Чтобы определить, как вы "произносите" строку цифр, разделите ее на минимальное количество подстрок таким образом, чтобы каждая подстрока содержала ровно одну уникальную цифру. Затем для каждой подстроки произнесите количество цифр, затем произнесите цифру. Наконец, объедините каждую указанную цифру.
Например, высказывание и преобразование для цифровой строки "3322251" (*во вложении)
Дается положительное целое число n, верните n-й член последовательности "посчитай и скажи".

lc-dailytemp.py
https://leetcode.com/problems/daily-temperatures/
739. Daily Temperatures Medium 11.2K 246 Companies
Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

lc-delellinked.py
Удаление элементов из связного списка (https://leetcode.com/problems/remove-linked-list-elements/)
Сложность: Лёгкая (203)
Условие задачи: дан указатель на связный список и целое число (val). Надо извлечь из списка все узлы, значение в которых равняется val. 
Итогом должен быть возврат на начало изменненного списка (все операции будут производиться непосредственно с самим списком). 

lc-dif1sym.py
Строки отличающиеся на один символ
(https://leetcode.com/problems/strings-differ-by-one-character/)
Сложность задачи: Средняя
Условие задачи:
Дан список строк dict, где все строки имеют одинаковую длину.
Верните true, если в одном и том же индексе есть 2 строки, которые отличаются только на 1 символ, в противном случае возвращает false.

lc-dups.py
Содержание дубликатов II
(https://leetcode.com/problems/contains-duplicate-ii/)
Сложность: Лёгкая
Условие задачи: дается массив из целых чисел и число k. Необходимо вернуть true, если существуют два уникальных индекса, которые удовлетворяют условиям:

lc-erasedstr.py
Сравнение стёртых строк 
(https://leetcode.com/problems/backspace-string-compare/)
Сложность: Лёгкая 
Условие задачи: даны две строки, необходимо выяснить являются они идентичными после удаления символов путем использования клавиши backspace (символ #). 
Если строка пустая, то backspace оставляет её пустой. 

lc-exipath.py
Нахождение существующего пути
(https://leetcode.com/problems/find-if-path-exists-in-graph/)
Сложность: Лёгкая 
Условие задачи: дается ненаправленный граф, ребра которого представлены в массиве. Между каждой парой узлов в дереве имеется не более одного ребра.
Необходимо определить, существует ли корректная дорога между узлом source и destination.

lc-filler.py
Заливка
(https://leetcode.com/problems/flood-fill/)
Сложность: Лёгкая 
Условие задачи: дается изображение, которое представлено двумерной матрицей, где каждая ячейка означает значение пикселя.
Также даются три числа sr, sc, color. Надо осуществить заливку, начиная с image[sr][sc].
Заливка осуществляется в четырех направлениях от текущей ячейки, при этом изменяются только ячейки, которые имеют идентичное значение пикселя с базовой ячейкой.

lc-find2dim.py
Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:
Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.
Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5
Output: true
Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20
Output: false
https://leetcode.com/problems/search-a-2d-matrix-ii/

lc-finddup.py
Поиск дубликата
Условие задачи:
Дан массив целых чисел nums, содержащий n + 1 целых чисел, где каждое целое число находится в диапазоне [1, n] включительно.
В nums есть только одно повторяющееся число, верните это повторяющееся число.
Вы должны решить задачу, не изменяя элементы массива и используя только постоянное дополнительное пространство.
Все целые числа в nums отображаются только один раз, за исключением ровно одного целого числа, которое появляется два или более раз.

lc-fixlim.py
Подмассив с фиксированными границами
(https://leetcode.com/problems/count-subarrays-with-fixed-bounds/description/)
Сложность: Тяжёлая
Условие задачи: дается целочисленный массив nums и два целых числа minK и maxK.
Подмассив nums с фиксированной привязкой - это подмассив, который удовлетворяет следующим условиям:
Минимальное значение в подмассиве равно minK.
Максимальное значение в подмассиве равно max.
Возвращает количество подмассивов с фиксированной привязкой.
Подмассив - это непрерывная часть массива.

lc-flowers.py
Усадка клумбы
(https://leetcode.com/problems/can-place-flowers/)
Сложность: Лёгкая
Условие задачи: есть длинная клумба, на которой некоторые участки засажены, а некоторые нет. Однако цветы нельзя сажать на соседних участках.
Учитывая целочисленный массив flowerbed, содержащий 0 и 1, где 0 означает пустой, а 1 означает непустой, и целое число n, верните, если на клумбе можно посадить n новых цветов, не нарушая правила отсутствия соседних цветов.

lc-flylow.py
Перелет с наименьшей ценой
(https://leetcode.com/problems/cheapest-flights-within-k-stops/description/)
Сложность: Средняя 
Условие задачи: есть n городов, соединенных некоторым количеством рейсов. Вам предоставляется массив рейсов, где рейсы[i] = [fromi, toi, pricei] указывают, что есть рейс из города из i в город toi со стоимостью pricei.
Вам также даны три целых числа src, dst и k, возвращающие самую дешевую цену из src в dst не более чем с k остановками. Если такого маршрута нет, верните значение -1.

lc-grupana.py
Групповые анаграммы
(https://leetcode.com/problems/group-anagrams/)
Сложность задачи: Средняя
Условие задачи:
Дан массив строк strs. Требуется сгруппировать анаграммы вместе. Вы можете вернуть ответ в любом порядке.
Анаграмма — это слово или фраза, образованная путем перестановки букв другого слова или фразы, обычно с использованием всех исходных букв ровно один раз.

lc-halfsame.py
Проверка схожести половин строки
(https://leetcode.com/problems/determine-if-string-halves-are-alike/)
Сложность: Лёгкая 
Условие задачи: на вход подается строка четной длины. Далее проводится разделение на две равные части.
Две строки называются схожими, если в них находится одно и то же количество гласных вне зависимости от регистра.
Необходимо проверить схожесть двух строк, полученных разбиением по середине.

lc-happyto1.py
Счастливое число
(https://leetcode.com/problems/happy-number/)
Сложность: Лёгкая
Условие задачи: требуется написать алгоритм, определяющий, является ли число счастливым. 
Счастливым называется число, соответствующее следующим требованиям:
- создается число, являющееся суммой квадратов цифр числа на предыдущей итерации;
- процесс прододжается до тех пор, пока данная сумма не будет равна 1 или не зациклится;
- числа, которые сходяится по данному алгоритму к единице и являются счастливыми. 

lc-harmonicseq.py
Гармоничная подпоследовательность наибольшей длины
(https://leetcode.com/problems/longest-harmonious-subsequence/)
Сложность: Средняя 
Условие задачи: Мы определяем гармоничный массив как массив, в котором разница между его максимальным значением и минимальным значением равна ровно 1.
Дается целочисленный массив nums, верните длину его самой длинной гармоничной подпоследовательности среди всех его возможных подпоследовательностей.
Подпоследовательность массива - это последовательность, которая может быть получена из массива путем удаления некоторых элементов или вообще без них без изменения порядка остальных элементов.

lc-hindex.py
https://leetcode.com/problems/h-index/description/
Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.
According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.

lc-icecosts.py
Мороженое
(https://leetcode.com/problems/maximum-ice-cream-bars/description/)
Сложность: Средняя
Условие задачи: стоит душный летний день, и мальчик хочет купить несколько батончиков мороженого.
В магазине есть n батончиков мороженого. Вам дается массив costs длины n, где costs[i] - это цена i-го батончика мороженого в монетах. У мальчика изначально есть монеты, которые можно потратить, и он хочет купить как можно больше батончиков мороженого. 
Верните максимальное количество батончиков мороженого, которые мальчик может купить за монеты coins.
Мальчик может купить батончики мороженого в любом порядке.

lc-idealnum.py
Идеальное число
(https://leetcode.com/problems/perfect-number/description/)
Сложность: Лёгкая
Условие задачи: идеальное число - это положительное целое число, которое равно сумме делителей этого же числа, за исключением самого числа.
Необходимо проверить входное число на идеальность.

lc-intersectint.py
Пересечение интервала
(https://leetcode.com/problems/insert-interval/)
Сложность: Средняя 
Условие задачи: дается массив из непересекающихся интервалов, где первое число подсписка - начальная координата, а второе число - конечная координата. Также подается новый интервал.
Необходимо внедрить новый интервал в уже существующий список и вернуть полученный результат после вставки.

lc-islands.py
Определение количества островов
(https://leetcode.com/problems/number-of-islands/)
Сложность: Средняя
Условие задачи: дан двумерный массив размера m x n. "1" отвечает за сушу, "0" - за океан. Требуется опеределить количество островов, расположенных на карте. 
Островом считается территория, образованная из "1", расположенных сверху, справа, снизу и слева относительно друг друга. 

lc-ispower2.py
Степень двойки (https://leetcode.com/problems/power-of-two)
Сложность: Лёгкая
Условие задачи: даётся целое число n, необходимо проверить, является ли число степенью двойки или же нет.  

lc-izomorf.py
Изоморфизм строки (https://leetcode.com/problems/isomorphic-strings/)
(https://leetcode.com/problems/isomorphic-strings/)
Сложность: Лёгкая
Условие задачи: даны две строки s и t. Просят проверить их на изоморфность. 
Две строки считаются изоморфными, если одной букве из одной строки ставится в соответствие уникальная буква из другой строки. Соответствие должно быть уникальным.

lc-keysrow.py
Ряд клавиатуры
(https://leetcode.com/problems/keyboard-row/)
Сложность: Лёгкая 
Условие задачи: дается массив из строк, необходимо вернуть те строки из массива, которые могут быть набраны лишь при использовании знаков из одного ряда. 

lc-knear0.py
K - ближайших точек к началу координат (https://leetcode.com/problems/k-closest-points-to-origin/)
Сложность:  Средняя 
Условие задачи: дан массив точек на плоскости, характеризующихся соответствующими декартовыми координатами. Также дается число k, которое обозначает количество точек, наиболее близких к началу координат, которые надо вывести. Расстояние измеряется через расстояние Евклида.
Гарантируется уникальность ответа.

lc-kthmissing.py
Отсутствующее число
(https://leetcode.com/problems/kth-missing-positive-number/)
Сложность: Лёгкая
Условие задачи: дан массив arr из натуральных чисел, отсортированных в строго возрастающем порядке, и целое число k.
Возвращает k-е положительное целое число, отсутствующее в этом массиве.

lc-kvasort.py
Квадраты отсортированного массива (https://leetcode.com/problems/squares-of-a-sorted-array/)
Сложность: Лёгкая
Условие задачи: дан массив, отсортированный в порядке неубывания. Надо вернуть массив (также отсортированный), состоящий из элементов первого массива, возведенных во вторую степень. 

lc-larsubstring-1624.py
https://leetcode.com/problems/largest-substring-between-two-equal-characters/?envType=daily-question&envId=2023-12-31
1624. Largest Substring Between Two Equal Characters
Easy
Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.
A substring is a contiguous sequence of characters within a string.

lc-lastlen.py
Длина последнего слова в строке
Частота встречи задач на собеседованиях за последние шесть месяцев:
Amazon — 3, Microsoft — 2, Google — 3.
Условие задачи:
Дана строка s, состоящая из слов и пробелов. Требуется вернуть длину последнего слова в строке.
Слово — это максимальная подстрока, состоящая только из символов, не содержащих пробелов.
Требуемая сложность: O(N), N - длина строки.

lc-laststone.py
Последний из камней
(https://leetcode.com/problems/last-stone-weight/)
Сложность: Лёгкая 
Условие задачи: на вход подается массив из камней, где i-ый элемент обозначает вес соответствующего камня.
Осуществляется игра в камни: берутся два камня с наибольшим весом и сталкиваются. Результат их столкновения может быть следующим:
- оба уничтожаются при условии одинакового веса;
- при условии неравенства весов из веса большего вычитается меньший вес, а после снова добавляется в массив.
Игра продолжается до тех пор пока есть хотя бы один камень,  необходимо вернуть это самый последний вес. При отсутствии камней в конце - вернуть ноль.

lc-linearnum.py
Количество точек на прямой
(https://leetcode.com/problems/max-points-on-a-line/)
Сложность: Тяжёлая
Условие задачи: дается массив точек, где точки [i] = [xi, yi] представляют точку на плоскости X-Y, верните максимальное количество точек, которые лежат на одной прямой.

lc-list2str.py
Проверка соответствия строк в двух списках
(https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/)
Сложность: Лёгкая 
Условие задачи: на вход подаются два строковых массива, необходимо вернуть true, если два массива представляют одну и ту же строку, false  в противном случае.
Под представлением одной и той же строки подразумевается, что после конкатенации всех фрагментов списков, две полученные строки будут идентичными.

lc-listtop.py
Нахождение вершины списка
(https://leetcode.com/problems/find-peak-element/)
Сложность: Средняя 
Условие задачи: вершина списка - элемент, который больше как соседа слева, так и соседа справа.
Дается целочисленный массив (проиндексированный с 0), необходимо вычислить элемент, который является вершиной списка, а после вернуть его индекс. В случае нескольких таких элементов можно вернуть любой из вариантов.
Алгоритм должен иметь временную сложность O (log n).

lc-longnorept.py
Самая длинная подстрока без повторений
(https://leetcode.com/problems/longest-substring-without-repeating-characters/)
Сложность: Средняя. 
Условие задачи: дана строка надо найти самую длинную подстроку, в которой не будет повторений. 

lc-longones.py
Максимальное количество единиц
(https://leetcode.com/problems/max-consecutive-ones/)
Сложность: Лёгкая 
Условие задачи: дается бинарный массив (состоит только из 0 и 1). Необходимо вычислить максимальную длину подмассива, в котором присутствуют только 1. 

lc-longpalin.py
Given a string s, return the longest palindrome substring in s

lc-major.py
Условие задачи:
Дан массив nums размера n. Требуется вернуть мажоритарный элемент.
Мажоритарный элемент - это элемент, который появляется более n / 2 раз. Вы можете быть уверены, что мажоритарный элемент всегда существует в массиве.

lc-maxavgsubarray.py
Максимальное среднее подмассива
(https://leetcode.com/problems/maximum-average-subarray-i/description/)
Сложность: Лёгкая
Условие задачи: дается целочисленный массив nums, состоящий из n элементов и целого числа k.
Найдите непрерывный подмассив, длина которого равна k, который имеет максимальное среднее значение, и верните это значение. Будет принят любой ответ с ошибкой вычисления менее 10-5.

lc-maxcircle.py
Максимальная сумма замкнутого подмассива
(https://leetcode.com/problems/maximum-sum-circular-subarray/)
Сложность: Средняя 
Условие задачи: дается круговой целочисленный массив nums длины n, верните максимально возможную сумму непустого подмассива nums.
Циклический массив означает, что конец массива соединяется с началом массива. Формально следующим элементом nums[i] является nums[(i + 1) % n], а предыдущим элементом nums[i] является nums[(i - 1 + n) % n].
Подмассив может включать в себя каждый элемент фиксированных чисел буфера не более одного раза. Формально, для подмассива nums[i], nums[i + 1], ..., nums[j] не существует i <= k1, k2 <= j с k1 % n == k2 % n.

lc-maxmidsub.py
Максимальное среднее подмассива
(https://leetcode.com/problems/maximum-average-subarray-i/description/)
Сложность: Лёгкая
Условие задачи: дается целочисленный массив nums, состоящий из n элементов и целого числа k.
Найдите непрерывный подмассив, длина которого равна k, который имеет максимальное среднее значение, и верните это значение. Будет принят любой ответ с ошибкой вычисления менее 10-5.

lc-maxprefix.py
Наибольший общий префикс
Частота встречи задач на собеседованиях за последние шесть месяцев:
Facebook* — 21, Amazon — 16, Apple — 14, Adobe — 11, Google — 9, Microsoft — 6, Uber — 6.
Условие задачи:
Напишите функцию для поиска самого длинного общего префикса у массива строк. Если общего префикса нет, верните пустую строку.
Требуемая сложность:
O(S), S — сумма всех символов во всех строках.

lc-maxsubarray.py
Максимальный подмассив (https://leetcode.com/problems/maximum-subarray/)
Сложность: Средняя
Условие задачи: дан целочисленный массив, необходимо найти в нем такой подмассив, сумма элементов в котором будет максимальной. 
Подмассивом называется последовательная часть исходного массива. 

lc-maxsubgrow.py
Количество возрастающих подпоследовательностей наибольшей длины  
https://leetcode.com/problems/number-of-longest-increasing-subsequence/
Сложность: Средняя
Условие задачи: дан массив целых чисел, надо посчитать количество возрастающих подпоследовательностей наибольшей длины. Подпоследовательность (ее элементы) должна строго возрастать.

lc-maxtarget.py
Минимальный размер подмассива с суммой
(https://leetcode.com/problems/minimum-size-subarray-sum/)
Сложность: Средняя
Условие задачи: дан целочисленный массив и значение целевой суммы, необходимо вернуть минимальную длину подмассива, сумма чисел в котором больше или равна целевому значению, в случае отсутствия решения - вернуть 0.

lc-minaloop.py
Минимальное количество ребер
(https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/description/)
Сложность: Средняя 
Условие задачи: дается ациклический направленный граф с вершинами, пронумерованными от 0 до n-1.
Необходимо найти наименьшее количество ребер в графе такое что, можно было бы обойти все узлы.

lc-minbigger.py
Минимальное большее 
(https://leetcode.com/problems/find-smallest-letter-greater-than-target/)
Сложность: Лёгкая
Условие задачи: задан массив букв символов, отсортированных в порядке неубывания, и целевой символ. В буквах есть по крайней мере два разных символа.
Необходимо вернуть наименьший символ в буквах, который лексикографически больше целевого. Если такого символа не существует, верните первый символ буквами.

lc-minbridge.py
Мост наименьшей длины (https://leetcode.com/problems/shortest-bridge/)
Сложность: Средняя
Условие задачи: на вход подается матрица, в которой 1 - суша, 0 - вода.
Остров представляет из себя совокупность частей суши, соединенных в четырех направлениях. На решетке существуют только два острова.
Можно изменить 0 на 1 для соединения двух островов в один. 
Необходимо посчитать количество смен нулей на единицу для соединения двух островов.

lc-mindiff.py
Минимальная разница между узлами бинарного дерева
(https://leetcode.com/problems/minimum-distance-between-bst-nodes/)
Сложность: Лёгкая
Условие задачи: дается корень бинарного дерева поиска, верните минимальную разницу между значениями любых двух различных вершин в дереве.

lc-minof69.py
Максимальное число из 6 и 9
(https://leetcode.com/problems/maximum-69-number/)
Сложность: Лёгкая
Условие задачи: дается число, полностью состоящее из 6 и 9. Необходимо вычислить наибольшее число в данной раскладке, при этом имея возможность заменить не более одной шестерки на девятку.

lc-minsumindex.py
Сложность: Лёгкая 
Условие задачи: дается два массива строк list1 и list2, найдите общие строки с наименьшей суммой индексов.
Общая строка - это строка, которая появилась как в list1, так и в list2.
Общая строка с наименьшей суммой индексов - это общая строка, такая, что если она появилась в list1[i] и list2[j], то i + j должно быть минимальным значением среди всех других общих строк.
Возвращает все общие строки с наименьшей суммой индексов. Верните ответ в любом порядке.

lc-mintriangle.py
Треугольник (https://leetcode.com/problems/triangle/)
Сложность: Средняя
Условие задачи: дан двумерный массив, надо посчитать минимальную сумму от вершины тругольника до его основания. 
На каждом шаге, анходясь на i-ой позиции можно перемещаться на i-ую или i+1 позицию следующего ряда. 

lc-msga.py
Make the string great AGAIN (https://leetcode.com/problems/make-the-string-great/)
Сложность: Лёгкая 
Условие задачи: дается строка, состоящая из латинских букв как в нижнем, так и в вернем регистре.
Строка считается качественной, если две соседние буквы не представлены одной и той же буквой, но в разных регистрах. Такие буквы удаляются до тех пор, пока строка не станет качественной. 
Вернуть надо строку, над которой были совершены все преобразования. Гарантируется уникальность ответа. 
Пустая строка по умолчанию является качественной. 

lc-mult2.py
Умножение строк
(https://leetcode.com/problems/multiply-strings/)
Сложность задачи: Средняя
Условие задачи:
Даны два неотрицательных целых числа num1 и num2, представленные в виде строк, вернуть произведение num1 и num2, также представленное в виде строки.
Примечание. Вы не должны использовать какую-либо встроенную библиотеку BigInteger или напрямую преобразовывать входные данные в целое число.

lc-near3sum.py
Наиближайшая сумма трёх  (https://leetcode.com/problems/3sum-closest/)
Сложность: Средняя
Условие задачи: дан целочисленный массив и целевое значение суммы. Необходимо найти три числа из массива, которые либо в результате суммирования равны значению целевой суммы либо же максимально близки к ней по модулю. 
Каждый массив имеет единственное решение. 

lc-needle.py
Нахождение индекс первого вхождения в строку
(https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/)
Сложность: Средняя 
Условие задачи: дается две строки needle и haystack, верните индекс первого появления иглы в стоге сена или -1, если игла не является частью стога сена.

lc-nodups.py
Извлечение дубликатов из  (https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/)отсортированного списка II
(https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/)
Сложность: Средняя
Условие задачи: на вход подается указатель на начало связного списка, необходимо удалить все узлы, имеющие дубликаты, то есть в списке должны остаться лишь уникальные значения, которые были в изначальном списке. Необходимо вернуть связный список в отсортированном порядке как и был.

lc-notbanned.py
Наиболее частое слово
(https://leetcode.com/problems/most-common-word/)
Сложность: Лёгкая
Условие задачи: дается строковый абзац и строковый массив запрещенных слов banned возвращают наиболее часто встречающееся слово, которое не запрещено. Гарантируется, что есть хотя бы одно слово, которое не запрещено, и что ответ уникален.
Слова в абзаце не учитывают регистр, и ответ должен быть возвращен в нижнем регистре.

lc-num2eng.py
Целое число английскими словами
(https://leetcode.com/problems/integer-to-english-words/)
Сложность задачи: Трудная
Условие задачи:
Преобразуйте неотрицательное целое число num в его представление английскими словами.

lc-oneedit.py
Одно редактирование
(https://leetcode.com/problems/one-edit-distance/)
Сложность задачи: Средняя
Условие задачи:
Даны две строки s и t. Требуется вернуть true, если обе они находятся на расстоянии редактирования друг от друга, в противном случае вернуть false.
Говорят, что строка s находится на расстоянии редактирования от строки t, если вы можете:
• Вставить ровно один символ в s, чтобы получить t.
• Удалить ровно один символ из s, чтобы получить t.
• Заменить ровно один символ s другим символом, чтобы получить t.

lc-palniuniq.py
Палиндромная перестановка II
(https://leetcode.com/problems/palindrome-permutation-ii/)
Сложность задачи: Средняя
Условие задачи:
Дана строка s. Требуется вернуть все ее палиндромные перестановки (без дубликатов).
Вы можете вернуть ответ в любом порядке. Если s не имеет палиндромной перестановки, вернуть пустой список.

lc-parens.py
Скобочная пунктуация
(https://leetcode.com/problems/valid-parentheses/)
Сложность: Лёгкая
Условие задачи: дана строка, содержащая в себе только символы: '(', ')', '{', '}', '[', ']'. Надо выполнить проверку на то, корректно ли открыты и закрыты все скобки. 

lc-pathminsum.py
Путь минимальной суммы
(https://leetcode.com/problems/minimum-path-sum/)
Сложность: Средняя 
Условие задачи: дается двумерная матрица, заполненная неотрицательными числами. Необходимо найти путь из левого верхнего угла в правый нижний, который имеет наименьшую сумму. 
Двигаться можно лишь вправо и вниз. 

lc-permutations.py
Given an array of distinct integers, return all possible permutations
(in ay order).
There is itertools.permutations :)

lc-pivotel.py
Нахождение опорного элемента
(https://leetcode.com/problems/find-pivot-index/)
Сложность: Лёгкая 
Условие задачи: дан массив, состоящий из целых чисел. Необходимо вернуть опорный элемент массива. 
Опорным называется такое число массива, относительно которого сумма элементов находящихся слева, равна сумме элементов, расположенных справа. 
Необходимо вернуть индекс самого левого опороного элемента, в случае отсутствия такового - вернуть -1. 

lc-provinces.py
Количество провинций
(https://leetcode.com/problems/number-of-provinces/description/)
Сложность: Средняя
Условие задачи: даётся n провинций, какие-то из них соединены между собой, какие-то нет, также соблюдается правило транзитивности: если провинция «1» соединена с провинцией «2», а «2» соединена с «3» провинцией, то и «1» соединена с «3». 
Провинцией является совокупность городов, объединённых между собой, но при этом отделенные от других, принадлежащих другим провинциям. 
На вход даётся квадратичная матрица, в которой isConnected[i][j] = 1 - соединение между i - ым и j - - ым населенными пунктами (1 - имеется соединение, 0 - отсутствует). 
Необходимо вычислить количество провинций. 

lc-raspkursov.py
Расписание курсов
(https://leetcode.com/problems/course-schedule-ii/)
Сложность: Средняя
Условие задачи: дается количество курсов, сами курсы пронумерованны с нуля. Помимо этого дан массив, в котором хранятся зависимости. Зависимость 
prerequisites[i] = [ai, bi] предполагает, что курс ai может быть пройден только в случае, если пройден курс bi. 
Ответ на задачу должен содержать в себе такую последовательность курсов, при которой все курсы будут пройдены. 
Если невозможно осуществить проход по всем курсам, то в ответе надо вывести пустой массив. 

lc-rects1.py
Площадь прямоугольников (https://leetcode.com/problems/rectangle-area/)
Сложность: Средняя
Условие задачи: на вход подаются координаты двух прямоугольников (левый нижний угол, а также правый верхний угол). 
Необходимо вычислить суммарную площадь, занимаемую двумя прямоугольниками. 

lc-regletters-lists.py
Перебор регистра букв (https://leetcode.com/problems/letter-case-permutation/)
Сложность: Средняя
Условие задачи: на вход подается строка. Надо вывести все комбинации, которые можно составить из данных символов в верхнем и нижнем регистрах. 

lc-regletters.py
Перебор регистра букв 
(https://leetcode.com/problems/letter-case-permutation/)
Сложность: Средняя
Условие задачи: на вход подается строка. Надо вывести все комбинации, которые можно составить из данных символов в верхнем и нижнем регистрах. 

lc-restore-ip.py
Восстановить IP (https://leetcode.com/problems/restore-ip-addresses/description/)
(https://leetcode.com/problems/restore-ip-addresses/description/)
Сложность: Средняя
Условие задачи: действительный IP-адрес состоит ровно из четырех целых чисел, разделенных одиночными точками. Каждое целое число находится в диапазоне от 0 до 255 (включительно) и не может содержать начальных нулей.
Например, "0.1.2.201" и "192.168.1.1" являются допустимыми IP-адресами, но "0.011.255.245", "192.168.1.312" и "192.168@1.1 " являются недопустимыми IP-адресами.
Учитывая строку s, содержащую только цифры, верните все возможные действительные IP-адреса, которые могут быть сформированы путем вставки точек в s. Вам не разрешается изменять порядок или удалять какие-либо цифры в s. Вы можете вернуть действительные IP-адреса в любом порядке.

lc-rotarray.py
Сместить (https://leetcode.com/problems/rotate-array/) массив
(https://leetcode.com/problems/rotate-array/)
Сложность: Средняя
Условие задачи: дан массив, необходимо сместить массив на k-элементов, где k - неотрицательное число. 

lc-rotmatplace.py
Вращение изображения
(https://leetcode.com/problems/rotate-image/)
Сложность: Средняя
Условие задачи: дан двумерный массив, представляющий из себя изоражение, необходимо провращать данное изображение на 90 градусов по часов. 
Решение должно фактически изменять исходный массив, не создавая новой матрицы. 

lc-seqscopes.py
Сводные диапазоны
(https://leetcode.com/problems/summary-ranges/)
Сложность: Лёгкая
Условие задачи: дается массив из уникальных целых чисел цисел. Срез [a,b] - включает в себя множество значений из данного отрезка включительно. 
Необходимо верноть наименьший отсортированный список диапазонов, покрывающих все в массиве. Это означает, что каждый элемент из исходного массива должен быть включен только в единственный диапазон, и нет такого элемнта из исходного массива, что этот элемент будет в одном из диапазонов, но будет остутствовать в исходном массиве. 
"a->b" if a != b
"a" if a == b

lc-shares.py
Лучшее время для покупки и продажи акций
(https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)
Условие задачи:
Вам дан массив prices, где prices[i] — цена данной акции на i-й день.
Вы хотите максимизировать свою прибыль, выбрав один день для покупки одной акции и выбрав другой день в будущем для продажи этой акции.
Верните максимальную прибыль, которую вы можете получить от этой сделки. Если вы не можете получить никакой прибыли, верните 0.

lc-shift0s.py
Сдвиг нулей
(https://leetcode.com/problems/move-zeroes/submissions/)
Сложность: Лёгкая
Условие задачи: дан массив, необходимо переместить все нулевые элементы к концу массива, к его правой границе. 
Решение должно изменять исходный массив, не используя дополнительной памяти. 

lc-sortcols.py
Сортировка столбцов
(https://leetcode.com/problems/delete-columns-to-make-sorted/)
Сложность: Лёгкая
Условие задачи: предоставляется массив из n строк strs, все одинаковой длины.
Строки могут быть расположены таким образом, чтобы на каждой строке было по одной, образуя сетку. Например, strs = ["abc", "bce", "ce"] может быть организован как:
abc # bce # cae
Вам нужно удалить столбцы, которые не отсортированы лексикографически. В приведенном выше примере (с индексом 0) столбцы 0 ('a', 'b', 'c') и 2 ('c', 'e', 'e') отсортированы, в то время как столбец 1 ('b', 'c', 'a') не отсортирован., таким образом, вы бы удалили столбец 1.
Верните количество столбцов, которые нужно удалять.

lc-string-gcd.py
Наибольший общий делитель строки ver.1
(https://leetcode.com/problems/greatest-common-divisor-of-strings/)
Сложность: Лёгкая 
Условие задачи: для двух строк s и t мы говорим "t делит s" тогда и только тогда, когда s = t + ... + t (т.е. t объединяется с самим собой один или несколько раз).
Дается две строки str1 и str2, верните самую большую строку x, такую, что x делит как str1, так и str2.

lc-stringgcd.py
Наибольший общий делитель строки ver.2
(https://leetcode.com/problems/greatest-common-divisor-of-strings/)
Сложность: Лёгкая 
Условие задачи: для двух строк s и t мы говорим "t делит s" тогда и только тогда, когда s = t + ... + t (т.е. t объединяется с самим собой один или несколько раз).
Дается две строки str1 и str2, верните самую большую строку x, такую, что x делит как str1, так и str2.

lc-subarraymaxavg.py
Максимальное среднее подмассива
(https://leetcode.com/problems/maximum-average-subarray-i/description/)
Сложность: Лёгкая
Условие задачи: дается целочисленный массив nums, состоящий из n элементов и целого числа k.
Найдите непрерывный подмассив, длина которого равна k, который имеет максимальное среднее значение, и верните это значение. Будет принят любой ответ с ошибкой вычисления менее 10-5.

lc-submaxprod.py
Подмассив с наибольшим произведением
(https://leetcode.com/problems/maximum-product-subarray/)
Сложность: Средняя 
Условие задачи: на вход подается массив из чисел, необходимо вычислить максимальное произведение, которое встречается в подмассиве исходного массива. 
Подмассив - последовательный кусок исходного массива.

lc-subnondup.py
Подмножества (https://leetcode.com/problems/subsets/)
Сложность: Средняя
Условие задачи: дан массив из целых чисел, необходимо вывести все подмножества исходного массива, которые не содержат дубликаты.

lc-sumkratk.py
Суммы подмассивов, кратные K
(https://leetcode.com/problems/subarray-sums-divisible-by-k/)
Сложность: Средняя 
Условие задачи: дается целочисленный массив nums и целое число k, верните количество непустых подмассивов, сумма которых делится на k.
Подмассив - это непрерывная часть массива.

lc-telecomb.py
Буквенные комбинации номера телефона
Получив строку, содержащую цифры от 2 до 9 включительно, вернуть все возможные комбинации букв, которые может представлять число. Верните ответ в любом порядке. Отображение цифр в буквы (точно так же, как на телефонных кнопках) приведено на картинке. Обратите внимание, что 1 не соответствует ни одной букве.

lc-timo.py
Атака Тимо
(https://leetcode.com/problems/teemo-attacking/description/)
Сложность: Лёгкая
Условие задачи: происходит абстрактная ситуация - наш персонаж Тимо атакует своего соперника Эша. Результатом атаки является отравление оппонента на duration секунд. То есть начав атаку в момент времени t отравление будет длиться в промежуток времени [t, t + duration - 1]. 
Если Тимо решит нанести ещё один удар до окончания действия отравления от предыдущего, то итоговое отравление закончится через duration секунд. 
На вход подаётся массив из моментов времени нападений, а также длительность действия яда. Необходимо вычислить суммарную длительность действия отравы. 

lc-toplic.py
Матрица Топлица
(https://leetcode.com/problems/toeplitz-matrix/)
Сложность: Лёгкая Средняя Тяжёлая
Условие задачи: дается матрица mxn, верните значение true, если матрица является Теплициевой. В противном случае верните значение false.
Матрица является Теплициевой, если каждая диагональ от верхнего левого края до нижнего правого имеет одинаковые элементы.

lc-townjudge.py
Городской судья  
(https://leetcode.com/problems/find-the-town-judge/)
Сложность: Лёгкая 
Условие задачи: в городе живёт n людей, проиндексированные с 1 до n. Пошел слух, что один из горожан является судьей. 
Если в городе-таки имеется судья, то:
1. Судья никому не доверяет. 
2. Каждый горожанин, за исключением судьи, доверяет судье. 
3. Существует один и единственный человек, который удовлетворяет правилам 1 и 2. 
На вход подается массив связей доверия между гражданами, где trust[i] = [ai, bi] обозначает, что ai доверяет жителю bi.
Вывести надо индекс судьи или же -1 в случае отсутствия такового среди жителей города. 

lc-tribonacci.py
Nое число Трибоначчи
(https://leetcode.com/problems/n-th-tribonacci-number/description/)
Сложность: Лёгкая 
Условие задачи: последовательность Трибоначчи Tn определяется следующим образом:
T0 = 0, T1 = 1, T2 = 1 и Tn+3 = Tn + Tn+1 + Tn+2 для n >= 0.
По заданному n, верните значение Tn.

lc-tripascal.py
Треугольник Паскаля
(https://leetcode.com/problems/pascals-triangle/)
Сложность задачи: Легкая
Условие задачи:
Дано целое число numRows, верните первые numRows треугольника Паскаля.
В треугольнике Паскаля каждое число является суммой двух чисел непосредственно над ним, как показано на гифке выше.

lc-uni2lists.py
Объединить два отсортированных списка
(https://leetcode.com/problems/merge-two-sorted-lists/)
Вам даны head’ы двух отсортированных связанных списков list1 и list2. Объедините два списка в один отсортированный список. Список должен быть составлен путем соединения узлов первых двух списков. Верните head объединенного связанного списка.

lc-unicocc.py
Уникальное количество вхождений
Условие задачи:
Дан массив целых чисел arr, верните true, если количество вхождений каждого значения в массиве уникально, или false в противном случае.

lc-uparray.py
Неубывающий подмассив
(https://leetcode.com/problems/non-decreasing-subsequences/)
Сложность: Средняя 
Условие задачи: дается целочисленный массив nums, верните все различные возможные неубывающие подпоследовательности данного массива, по крайней мере, с двумя элементами. Вы можете вернуть ответ в любом порядке.

lc-vykup.py
Записка о выкупе (https://leetcode.com/problems/ransom-note/)
Сложность: Лёгкая 
Условие задачи: дано две строки: ransomNote и magazine. Требуется осуществить проверку, может ли строка ransomNote быть получена путем использования букв из строки magazine. 
Одна буква из magazine может быть исопльзована единажды в ransomNote.

lc-warmerday.py
Ежедневная температура (https://leetcode.com/problems/daily-temperatures/)
Сложность: Средняя 
Условие задачи: дается массив, в котором содержатся на температуры за определенный день. Необходимо вернуть массив, такой что будет содержать на i-ой позиции количество дней, которое необходимо выждать, чтобы наступил день теплее. Если такой ситуации не случается, то на i-ой позиции установить 0.

lc-weisum.py
Весовая сумма списка 2
(https://leetcode.com/problems/nested-list-weight-sum-ii/)
Сложность задачи: Средняя
Условие задачи:
Вам дан вложенный список целых чисел nestedList. Каждый элемент является либо целым числом, либо списком, элементы которого также могут быть целыми числами или другими списками.
Глубина целого числа — это количество списков, внутри которых оно находится. Например, во вложенном списке [1,[2,2],[[3],2],1] каждому целочисленному значению соответствует его глубина. Пусть maxDepth будет максимальной глубиной любого целого числа. Вес целого числа равен maxDepth - (глубина целого числа) + 1.
Верните сумму каждого целого числа во вложенном списке, умноженную на его вес.
Значения целых чисел во вложенном списке находятся в диапазоне [-100, 100].
Максимальная глубина любого целого числа меньше или равна 50.

lc-zigzag.py
Зигзагообразная обработка текста
(https://leetcode.com/problems/zigzag-conversion/)
Сложность: Средняя
Условие задачи: строка "PAYPALISHIRING" при разбиении на чтение зигзагом имеет следующий вид.
P      A     H     N
A  P  L  S  I   I  G
Y       I      R
Необходимо, используя данный шаблон и количество рядов для зигзага, преобразовать входную строку к данному выводу. То есть после трансформации получится строка "PAHNAPLSIIGYIR".

my-bintree.py
classes BinTree, BinTreePtr (в работе)

my-linkedlist.py
Классы LinkedList, LinkNode
