lc-afterpalin.py
Является ли строка палиндромом 
https://leetcode.com/problems/valid-palindrome/
Сложность: Лёгкая
Условие: палиндромом является фраза, которая после перевода в нижний регистр всех символов, а также удаления всех знаков препинания, читается одинаково как слева направо, так и справа налево. 
Задача - вернуть true, если строка палиндром, false - в противном случае. 

lc-alien.py
Чужой язык
https://leetcode.com/problems/verifying-an-alien-dictionary/
Сложность: Лёгкая
Условие задачи: на чужом языке они также используют английские строчные буквы, но, возможно, в другом порядке. Порядок алфавита - это некоторая перестановка строчных букв.
Учитывая последовательность слов, написанных на чужом языке, и порядок алфавита, верните значение true тогда и только тогда, когда данные слова отсортированы лексикографически на этом чужом языке.
(1ая версия)

lc-alilingvo.py
Чужой язык
https://leetcode.com/problems/verifying-an-alien-dictionary/
Сложность: Лёгкая
Условие задачи: на чужом языке они также используют английские строчные буквы, но, возможно, в другом порядке. Порядок алфавита - это некоторая перестановка строчных букв.
Учитывая последовательность слов, написанных на чужом языке, и порядок алфавита, верните значение true тогда и только тогда, когда данные слова отсортированы лексикографически на этом чужом языке.
(2ая версия)

lc-allana.py
Нахождение всех анаграмм в строке
https://leetcode.com/problems/find-all-anagrams-in-a-string/
Сложность: Средняя
Условие задачи: даны две строки s и p, надо вернуть все индексы стартовых позиций, с которых начинаются анаграммы внутри строки s. 
Анаграмма - строка, составленная путём перестановок букв из какого либо базового набора. 

lc-anklaves.py
Количество анклавов
(https://leetcode.com/problems/number-of-enclaves/)
Сложность: Средняя
Условие задачи: дана двумерная решетка, где 0 - море, 1 - суша. 
Движения могут осуществляться в одном из четрыех направлений: вверх, вниз, вправо, влево. 
Необходимо посчитать количество анклавов. Анклавом является участок суши, который не прилегает ни к одной из границ заданной площадки. 

lc-arrsign.py
Знак произведения массива
(https://leetcode.com/problems/sign-of-the-product-of-an-array/)
Сложность задачи: Легкая
Условие задачи:
Существует функция signFunc(x), которая возвращает:
1, если x положительно
-1, если x отрицательно
0, если x равно 0.
Вам дается целочисленный массив nums. Пусть product - это произведение всех значений в массиве nums. Верните signFunc(product).

lc-aster.py
Столкновение астероидов
(https://leetcode.com/problems/asteroid-collision/)
Сложность: Средняя
Условие задачи: дан массив астероидов (каждое значение - вес астероида, а знак - направление движения). Каждый из астероидов двигается с одинаковой скоростью. 
При столкновени двух астероидов, асторид с меньшим весов уничтожается (у целого астероида вес остается неизменным после столкновения). 
Вывести надо результирующий массив после всевозможных столкновений.  

lc-biggtri.py
Треугольник наибольшей площади
(https://leetcode.com/problems/largest-triangle-area/)
Сложность: Лёгкая 
Условие задачи: дается массив точек на плоскости X-Y, где точки [i] = [xi, yi], верните площадь самого большого треугольника, который может быть образован любыми тремя различными точками. Будут приняты ответы в пределах 10-5 от фактического ответа.

lc-bintreeright.py
Бинарное дерево с правой стороны
https://leetcode.com/problems/binary-tree-right-side-view/
Сложность:  Средняя 
Условие задачи: на вход подается бинарное дерево, представим, что стоим справа, необходимо вывезти значения, которые будут видны с этой стороны.

lc-carsnake.py
Змейка из машин
(https://leetcode.com/problems/car-fleet/)
Сложность: Средняя  
Условие задачи: есть n машин, направляющихся в одно и то же место на расстоянии target  по однополосной дороге.
Дается два целочисленных массива длины n, в первом хранится положение, а во втором скорость соответствующей машины.
Машины не могут обгонять друг друга, и в случае если быстрая машина догнала медленную, то движение она у же продолжает со скоростью медленной машины.
Змейка из машин - группа нескольких или одной машины, достигающих одновременно целевого пункта (расстояние между машинами в одной змейке не учитывается).
Необходимо вычислить количество таких змеек. 

lc-colexcel.py
Столбцы таблицы Excel 
(https://leetcode.com/problems/excel-sheet-column-title/)
Сложность: Лёгкая 
Условие задачи: на вход подается номер столбца, необходимо конвертировать его в буквенное представление, которое будет использоваться в таблице-Excel.

lc-combieq.py
Комбинации
(https://leetcode.com/problems/combinations/)
Сложность: Средняя
Условие задачи: даны два целых положительных числа n и k. Надо вывести все комибинации, состоящие из k-чисел в диапазоне [1, n]. 

lc-combsums.py
Комбинация сумм II
(https://leetcode.com/problems/combination-sum-ii/)
Сложность: Средняя 
Условие задачи: на вход дается список возможных кандидатов и целевое значение суммы, необходимо вывести все комбинации, которыми можно получить целевое значение. 
Каждое число из списка кандидатов должно содержаться в конечном подсписке из ответов ровно один раз.
Результирующий ответ не должен содержать в себе дубликатов. 

lc-confhalls.py
Конференц-залы II (https://leetcode.com/problems/meeting-rooms-ii/)
Сложность задачи: Средняя
Условие задачи:
Дан массив интервалов времени проведения совещаний, intervals, где intervals[i] = [start(i), end(i)]. Найдите минимальное требуемое количество конференц-залов.

lc-countingstr.py
Считалка
(https://leetcode.com/problems/count-and-say/)
Сложность: Средняя 
Условие задачи: последовательность "Посчитай и скажи" - это последовательность строк цифр, определяемая рекурсивной формулой:
посчитайте и скажите(1) = "1"
countAndSay(n) - это способ, которым вы бы "сказали" строку цифр из countAndSay(n-1), которая затем преобразуется в другую строку цифр.
Чтобы определить, как вы "произносите" строку цифр, разделите ее на минимальное количество подстрок таким образом, чтобы каждая подстрока содержала ровно одну уникальную цифру. Затем для каждой подстроки произнесите количество цифр, затем произнесите цифру. Наконец, объедините каждую указанную цифру.
Например, высказывание и преобразование для цифровой строки "3322251" (*во вложении)
Дается положительное целое число n, верните n-й член последовательности "посчитай и скажи".

lc-dailytemp.py
https://leetcode.com/problems/daily-temperatures/
739. Daily Temperatures Medium 11.2K 246 Companies
Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.

lc-delellinked.py
Удаление элементов из связного списка (https://leetcode.com/problems/remove-linked-list-elements/)
Сложность: Лёгкая (203)
Условие задачи: дан указетель на связный список и целое число (val). Надо извлечь из сипска все узлыва, значение в которых равняется val. 
Итогом должен быть возврат на начало изменненного списка (все опреции будут производиться непосредственно с самим списком). 

lc-dif1sym.py
Строки отличающиеся на один символ
(https://leetcode.com/problems/strings-differ-by-one-character/)
Сложность задачи: Средняя
Условие задачи:
Дан список строк dict, где все строки имеют одинаковую длину.
Верните true, если в одном и том же индексе есть 2 строки, которые отличаются только на 1 символ, в противном случае возвращает false.

lc-dups.py
Содержание дубликатов II
(https://leetcode.com/problems/contains-duplicate-ii/)
Сложность: Лёгкая
Условие задачи: дается массив из целых чисел и число k. Необходимо вернуть true, если существуют два уникальных индекса, которые удовлетворяют условиям:

lc-erasedstr.py
Сравнение стёртых строк 
(https://leetcode.com/problems/backspace-string-compare/)
Сложность: Лёгкая 
Условие задачи: даны две строки, необходимо выяснить являются они идентичными после удаления символов путем использования клавиши backspace (символ #). 
Если строка пустая, то backspace оставляет её пустой. 

lc-exipath.py
Нахождение существующего пути
(https://leetcode.com/problems/find-if-path-exists-in-graph/)
Сложность: Лёгкая 
Условие задачи: дается ненаправленный граф, ребра которого представлены в массиве. Между каждой парой узлов в дереве имеется не более одного ребра.
Необходимо определить существует ли корректная дорога между узлом source и destination.

lc-filler.py
Заливка
(https://leetcode.com/problems/flood-fill/)
Сложность: Лёгкая 
Условие задачи: дается изображение, которое представлено двумерной матрицей, где каждая ячейка означает значение пикселя.
Также даются три числа sr, sc, color. Надо осуществить заливку, начиная с image[sr][sc].
Заливка осуществляется в четырех направлениях от текущей ячейки, при этом изменяются только ячейки, которые имеют идентичное значение пикселя с базовой ячейкой.

lc-find2dim.py
Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:
Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.
Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5
Output: true
Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20
Output: false
https://leetcode.com/problems/search-a-2d-matrix-ii/

lc-finddup.py
Поиск дубликата
Условие задачи:
Дан массив целых чисел nums, содержащий n + 1 целых чисел, где каждое целое число находится в диапазоне [1, n] включительно.
В nums есть только одно повторяющееся число, верните это повторяющееся число.
Вы должны решить задачу, не изменяя элементы массива и используя только постоянное дополнительное пространство.
Все целые числа в nums отображаются только один раз, за исключением ровно одного целого числа, которое появляется два или более раз.

lc-fixlim.py
Подмассив с фиксированными границами
(https://leetcode.com/problems/count-subarrays-with-fixed-bounds/description/)
Сложность: Тяжёлая
Условие задачи: дается целочисленный массив nums и два целых числа minK и maxK.
Подмассив nums с фиксированной привязкой - это подмассив, который удовлетворяет следующим условиям:
Минимальное значение в подмассиве равно minK.
Максимальное значение в подмассиве равно max.
Возвращает количество подмассивов с фиксированной привязкой.
Подмассив - это непрерывная часть массива.

lc-flowers.py
Усадка клумбы
(https://leetcode.com/problems/can-place-flowers/)
Сложность: Лёгкая
Условие задачи: есть длинная клумба, на которой некоторые участки засажены, а некоторые нет. Однако цветы нельзя сажать на соседних участках.
Учитывая целочисленный массив flowerbed, содержащий 0 и 1, где 0 означает пустой, а 1 означает непустой, и целое число n, верните, если на клумбе можно посадить n новых цветов, не нарушая правила отсутствия соседних цветов.

lc-flylow.py
Перелет с наименьшей ценой
(https://leetcode.com/problems/cheapest-flights-within-k-stops/description/)
Сложность: Средняя 
Условие задачи: есть n городов, соединенных некоторым количеством рейсов. Вам предоставляется массив рейсов, где рейсы[i] = [fromi, toi, pricei] указывают, что есть рейс из города из i в город toi со стоимостью pricei.
Вам также даны три целых числа src, dst и k, возвращающие самую дешевую цену из src в dst не более чем с k остановками. Если такого маршрута нет, верните значение -1.

lc-grupana.py
Групповые анаграммы
(https://leetcode.com/problems/group-anagrams/)
Сложность задачи: Средняя
Условие задачи:
Дан массив строк strs. Требуется сгруппировать анаграммы вместе. Вы можете вернуть ответ в любом порядке.
Анаграмма — это слово или фраза, образованная путем перестановки букв другого слова или фразы, обычно с использованием всех исходных букв ровно один раз.

lc-halfsame.py
Проверка схожести половин строки
(https://leetcode.com/problems/determine-if-string-halves-are-alike/)
Сложность: Лёгкая 
Условие задачи: на вход подается строка четной длины. Далее проводится разделение на две равные части.
Две строки называются схожими, если в них находится одно и то же количество гласных вне зависимости от регистра.
Необходимо проверить схожесть двух строк, полученных разбиением по середине.

lc-harmonicseq.py
Гармоничная подпоследовательность наибольшей длины
(https://leetcode.com/problems/longest-harmonious-subsequence/)
Сложность: Средняя 
Условие задачи: Мы определяем гармоничный массив как массив, в котором разница между его максимальным значением и минимальным значением равна ровно 1.
Дается целочисленный массив nums, верните длину его самой длинной гармоничной подпоследовательности среди всех его возможных подпоследовательностей.
Подпоследовательность массива - это последовательность, которая может быть получена из массива путем удаления некоторых элементов или вообще без них без изменения порядка остальных элементов.

lc-hindex.py
https://leetcode.com/problems/h-index/description/
Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.
According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.

lc-icecosts.py
Мороженое
(https://leetcode.com/problems/maximum-ice-cream-bars/description/)
Сложность: Средняя
Условие задачи: стоит душный летний день, и мальчик хочет купить несколько батончиков мороженого.
В магазине есть n батончиков мороженого. Вам дается массив costs длины n, где costs[i] - это цена i-го батончика мороженого в монетах. У мальчика изначально есть монеты, которые можно потратить, и он хочет купить как можно больше батончиков мороженого. 
Верните максимальное количество батончиков мороженого, которые мальчик может купить за монеты coins.
Мальчик может купить батончики мороженого в любом порядке.

lc-idealnum.py
Идеальное число
(https://leetcode.com/problems/perfect-number/description/)
Сложность: Лёгкая
Условие задачи: идеальное число - это положительное целое число, которое равно сумме делителей этого же числа, за исключением самого числа.
Необходимо проверить входное число на идеальность.

lc-intersectint.py
Пересечение интервала
(https://leetcode.com/problems/insert-interval/)
Сложность: Средняя 
Условие задачи: дается массив из непересекающихся интервалов, где первое число подсписка - начальная координата, а второе число - конечная координата. Также подается новый интервал.
Необходимо внедрить новый интервал в уже существующий список и вернуть полученный результат после вставки.

lc-islands.py
Определение количества островов
(https://leetcode.com/problems/number-of-islands/)
Сложность: Средняя
Условие задачи: дан двумерный массив размера m x n. "1" отвечает за сушу, "0" - за океан. Требуется опеределить количество островов, расположенных на карте. 
Островом считается территория, образованная из "1", расположенных сверху, справа, снизу и слева относительно друг друга. 

lc-ispower2.py
Степень двойки (https://leetcode.com/problems/power-of-two)
Сложность: Лёгкая
Условие задачи: даётся целое число n, необходимо проверить, является ли число степенью двойки или же нет.  

lc-izomorf.py
Изоморфизм строки (https://leetcode.com/problems/isomorphic-strings/)
(https://leetcode.com/problems/isomorphic-strings/)
Сложность: Лёгкая
Условие задачи: даны две строки s и t. Просят проверить их на изоморфность. 
Две строки считаются изоморфными, если одной букве из одной строки ставится в соответствие уникальная буква из другой строки. Соответствие должно быть уникальным.

lc-knear0.py
K - ближайших точек к началу координат (https://leetcode.com/problems/k-closest-points-to-origin/)
Сложность:  Средняя 
Условие задачи: дан массив точек на плоскости, характеризующихся соответствующими декартовыми координатами. Также дается число k, которое обозначает количество точек, наиболее близких к началу координат, которые надо вывести. Расстояние измеряется через расстояние Евклида.
Гарантируется уникальность ответа.

lc-kthmissing.py
Отсутствующее число
(https://leetcode.com/problems/kth-missing-positive-number/)
Сложность: Лёгкая
Условие задачи: дан массив arr из натуральных чисел, отсортированных в строго возрастающем порядке, и целое число k.
Возвращает k-е положительное целое число, отсутствующее в этом массиве.

lc-kvasort.py
Квадраты отсортированного массива (https://leetcode.com/problems/squares-of-a-sorted-array/)
Сложность: Лёгкая
Условие задачи: дан массив, отсортированный в порядке неубывания. Надо вернуть массив (также отсортированный), состоящий из элементов первого массива, возведенных во вторую степень. 

lc-lastlen.py
Длина последнего слова в строке
Частота встречи задач на собеседованиях за последние шесть месяцев:
Amazon — 3, Microsoft — 2, Google — 3.
Условие задачи:
Дана строка s, состоящая из слов и пробелов. Требуется вернуть длину последнего слова в строке.
Слово — это максимальная подстрока, состоящая только из символов, не содержащих пробелов.
Требуемая сложность: O(N), N - длина строки.

lc-laststone.py
Последний из камней
(https://leetcode.com/problems/last-stone-weight/)
Сложность: Лёгкая 
Условие задачи: на вход подается массив из камней, где i-ый элемент обозначает вес соответствующего камня.
Осуществляется игра в камни: берутся два камня с наибольшим весом и сталкиваются. Результат их столкновения может быть следующим:
- оба уничтожаются при условии одинакового веса;
- при условии неравенства весов из веса большего вычитается меньший вес, а после снова добавляется в массив.
Игра продолжается до тех пор пока есть хотя бы один камень,  необходимо вернуть это самый последний вес. При отсутствии камней в конце - вернуть ноль.

lc-linearnum.py
Количество точек на прямой
(https://leetcode.com/problems/max-points-on-a-line/)
Сложность: Тяжёлая
Условие задачи: дается массив точек, где точки [i] = [xi, yi] представляют точку на плоскости X-Y, верните максимальное количество точек, которые лежат на одной прямой.

lc-list2str.py
Проверка соответствия строк в двух списках
(https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/)
Сложность: Лёгкая 
Условие задачи: на вход подаются два строковых массива, необходимо вернуть true, если два массива представляют одну и ту же строку, false  в противном случае.
Под представлением одной и той же строки подразумевается, что после конкатенации всех фрагментов списков, две полученные строки будут идентичными.

lc-listtop.py
Нахождение вершины списка
(https://leetcode.com/problems/find-peak-element/)
Сложность: Средняя 
Условие задачи: вершина списка - элемент, который больше как соседа слева, так и соседа справа.
Дается целочисленный массив (проиндексированный с 0), необходимо вычислить элемент, который является вершиной списка, а после вернуть его индекс. В случае нескольких таких элементов можно вернуть любой из вариантов.
Алгоритм должен иметь временную сложность O (log n).

lc-longnorept.py
Самая длинная подстрока без повторений
(https://leetcode.com/problems/longest-substring-without-repeating-characters/)
Сложность: Средняя. 
Условие задачи: дана строка надо найти самую длинную подстроку, в которой не будет повторений. 

lc-longones.py
Максимальное количество единиц
(https://leetcode.com/problems/max-consecutive-ones/)
Сложность: Лёгкая 
Условие задачи: дается бинарный массив (состоит только из 0 и 1). Необходимо вычислить максимальную длину подмассива, в котором присутствуют только 1. 

lc-longpalin.py
Given a string s, return the longest palindrome substring in s

lc-major.py
Условие задачи:
Дан массив nums размера n. Требуется вернуть мажоритарный элемент.
Мажоритарный элемент - это элемент, который появляется более n / 2 раз. Вы можете быть уверены, что мажоритарный элемент всегда существует в массиве.

lc-maxcircle.py
Максимальная сумма замкнутого подмассива
(https://leetcode.com/problems/maximum-sum-circular-subarray/)
Сложность: Средняя 
Условие задачи: дается круговой целочисленный массив nums длины n, верните максимально возможную сумму непустого подмассива nums.
Циклический массив означает, что конец массива соединяется с началом массива. Формально следующим элементом nums[i] является nums[(i + 1) % n], а предыдущим элементом nums[i] является nums[(i - 1 + n) % n].
Подмассив может включать в себя каждый элемент фиксированных чисел буфера не более одного раза. Формально, для подмассива nums[i], nums[i + 1], ..., nums[j] не существует i <= k1, k2 <= j с k1 % n == k2 % n.

lc-maxmidsub.py
Максимальное среднее подмассива
(https://leetcode.com/problems/maximum-average-subarray-i/description/)
Сложность: Лёгкая
Условие задачи: дается целочисленный массив nums, состоящий из n элементов и целого числа k.
Найдите непрерывный подмассив, длина которого равна k, который имеет максимальное среднее значение, и верните это значение. Будет принят любой ответ с ошибкой вычисления менее 10-5.

lc-maxprefix.py
Наибольший общий префикс
Частота встречи задач на собеседованиях за последние шесть месяцев:
Facebook* — 21, Amazon — 16, Apple — 14, Adobe — 11, Google — 9, Microsoft — 6, Uber — 6.
Условие задачи:
Напишите функцию для поиска самого длинного общего префикса у массива строк. Если общего префикса нет, верните пустую строку.
Требуемая сложность:
O(S), S — сумма всех символов во всех строках.

lc-maxsubarray.py
Максимальный подмассив (https://leetcode.com/problems/maximum-subarray/)
Сложность: Средняя
Условие задачи: дан целочисленный массив, необходимо найти в нем такой подмассив, сумма элементов в котором будет максимальной. 
Подмассивом называется последовательная часть исходного массива. 

lc-maxsubgrow.py
Количество возрастающих подпоследовательностей наибольшей длины  
https://leetcode.com/problems/number-of-longest-increasing-subsequence/
Сложность: Средняя
Условие задачи: дан массив целых чисел, надо посчитать количество возрастающих подпоследовательностей наибольшей длины. Подпоследовательность (ее элементы) должна строго возрастать.

lc-maxtarget.py
Минимальный размер подмассива с суммой
(https://leetcode.com/problems/minimum-size-subarray-sum/)
Сложность: Средняя
Условие задачи: дан целочисленный массив и значение целевой суммы, необходимо вернуть минимальную длину подмассива, сумма чисел в котором больше или равна целевому значению, в случае отсутствия решения - вернуть 0.

lc-minbigger.py

lc-minbridge.py

lc-mindiff.py

lc-minof69.py

lc-minsumindex.py

lc-mintriangle.py

lc-msga.py

lc-mult2.py

lc-near3sum.py

lc-needle.py

lc-nodups.py

lc-notbanned.py

lc-num2eng.py

lc-oneedit.py

lc-palniuniq.py

lc-parens.py

lc-pathminsum.py

lc-permutations.py

lc-pivotel.py

lc-provinces.py

lc-raspkursov.py

lc-rects1.py

lc-regletters-lists.py

lc-regletters.py

lc-rotarray.py

lc-rotmatplace.py

lc-seqscopes.py

lc-shares.py

lc-shift0s.py

lc-sortcols.py

lc-string-gcd.py

lc-stringgcd.py

lc-subarraymaxavg.py

lc-submaxprod.py

lc-subnondup.py

lc-telecomb.py

lc-toplic.py

lc-townjudge.py

lc-tribonacci.py

lc-tripascal.py

lc-uni2lists.py

lc-unicocc.py

lc-uparray.py

lc-vykup.py

lc-weisum.py

lc-zigzag.py

my-bintree.py
classes BinTree, BinTreePtr (в работе)

my-linkedlist.py
